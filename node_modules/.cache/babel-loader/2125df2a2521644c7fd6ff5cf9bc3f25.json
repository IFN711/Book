{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport { oneOfType, func, shape, any, number, object, bool, string } from 'prop-types';\nvar isIE = !!document.documentElement.currentStyle;\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea = document.createElement('textarea');\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n{\n  hiddenTextarea.setAttribute('tab-index', '-1');\n  hiddenTextarea.setAttribute('aria-hidden', 'true');\n  forceHiddenStyles(hiddenTextarea);\n}\n\nfunction calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (minRows === void 0) {\n    minRows = null;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = null;\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);\n\n  if (nodeStyling === null) {\n    return null;\n  }\n\n  var paddingSize = nodeStyling.paddingSize,\n      borderSize = nodeStyling.borderSize,\n      boxSizing = nodeStyling.boxSizing,\n      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n  Object.keys(sizingStyle).forEach(function (key) {\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  } // measure height of a textarea with a single row\n\n\n  hiddenTextarea.value = 'x';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize; // Stores the value's rows count rendered in `hiddenTextarea`,\n  // regardless if `maxRows` or `minRows` props are passed\n\n  var valueRowCount = Math.floor(height / singleRowHeight);\n\n  if (minRows !== null) {\n    minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  var rowCount = Math.floor(height / singleRowHeight);\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    rowCount: rowCount,\n    valueRowCount: valueRowCount\n  };\n}\n\nfunction calculateNodeStyling(node, uid, useCache) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (useCache && computedStyleCache[uid]) {\n    return computedStyleCache[uid];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {\n    obj[name] = style.getPropertyValue(name);\n    return obj;\n  }, {});\n  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);\n  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache) {\n    computedStyleCache[uid] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nvar purgeCache = function purgeCache(uid) {\n  delete computedStyleCache[uid];\n};\n\nvar noop = function noop() {};\n\nvar uid = 0;\n\nvar TextareaAutosize = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TextareaAutosize, _React$Component);\n\n  function TextareaAutosize(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this._onRef = function (node) {\n      _this._ref = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n        return;\n      }\n\n      inputRef.current = node;\n    };\n\n    _this._onChange = function (event) {\n      if (!_this._controlled) {\n        _this._resizeComponent();\n      }\n\n      _this.props.onChange(event, _assertThisInitialized(_this));\n    };\n\n    _this._resizeComponent = function (callback) {\n      if (callback === void 0) {\n        callback = noop;\n      }\n\n      var nodeHeight = calculateNodeHeight(_this._ref, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);\n\n      if (nodeHeight === null) {\n        callback();\n        return;\n      }\n\n      var height = nodeHeight.height,\n          minHeight = nodeHeight.minHeight,\n          maxHeight = nodeHeight.maxHeight,\n          rowCount = nodeHeight.rowCount,\n          valueRowCount = nodeHeight.valueRowCount;\n      _this.rowCount = rowCount;\n      _this.valueRowCount = valueRowCount;\n\n      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {\n        _this.setState({\n          height: height,\n          minHeight: minHeight,\n          maxHeight: maxHeight\n        }, callback);\n\n        return;\n      }\n\n      callback();\n    };\n\n    _this.state = {\n      height: props.style && props.style.height || 0,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    };\n    _this._uid = uid++;\n    _this._controlled = props.value !== undefined;\n    _this._resizeLock = false;\n    return _this;\n  }\n\n  var _proto = TextareaAutosize.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _inputRef = _this$props.inputRef,\n        _maxRows = _this$props.maxRows,\n        _minRows = _this$props.minRows,\n        _onHeightChange = _this$props.onHeightChange,\n        _useCacheForDOMMeasurements = _this$props.useCacheForDOMMeasurements,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inputRef\", \"maxRows\", \"minRows\", \"onHeightChange\", \"useCacheForDOMMeasurements\"]);\n\n    props.style = _extends({}, props.style, {\n      height: this.state.height\n    });\n    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);\n\n    if (maxHeight < this.state.height) {\n      props.style.overflow = 'hidden';\n    }\n\n    return createElement(\"textarea\", _extends({}, props, {\n      onChange: this._onChange,\n      ref: this._onRef\n    }));\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment\n    // causing competing rerenders (due to setState in the listener) in React.\n    // More can be found here - facebook/react#6324\n\n\n    this._resizeListener = function () {\n      if (_this2._resizeLock) {\n        return;\n      }\n\n      _this2._resizeLock = true;\n\n      _this2._resizeComponent(function () {\n        _this2._resizeLock = false;\n      });\n    };\n\n    window.addEventListener('resize', this._resizeListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._resizeComponent();\n    }\n\n    if (this.state.height !== prevState.height) {\n      this.props.onHeightChange(this.state.height, this);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener);\n    purgeCache(this._uid);\n  };\n\n  return TextareaAutosize;\n}(Component);\n\nTextareaAutosize.defaultProps = {\n  inputRef: noop,\n  onChange: noop,\n  onHeightChange: noop,\n  useCacheForDOMMeasurements: false\n};\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  inputRef: oneOfType([func, shape({\n    current: any\n  })]),\n  maxRows: number,\n  minRows: number,\n  onChange: func,\n  onHeightChange: func,\n  style: object,\n  useCacheForDOMMeasurements: bool,\n  value: string\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"sources":["D:/react/IFN711/LFAA/node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.browser.js"],"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","createElement","Component","oneOfType","func","shape","any","number","object","bool","string","isIE","document","documentElement","currentStyle","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","SIZING_STYLE","computedStyleCache","hiddenTextarea","forceHiddenStyles","node","Object","keys","forEach","key","style","setProperty","setAttribute","calculateNodeHeight","uiTextNode","uid","useCache","minRows","maxRows","parentNode","body","appendChild","nodeStyling","calculateNodeStyling","paddingSize","borderSize","boxSizing","sizingStyle","value","placeholder","minHeight","Infinity","maxHeight","scrollHeight","singleRowHeight","valueRowCount","Math","floor","max","min","rowCount","window","getComputedStyle","reduce","obj","name","getPropertyValue","width","parseFloat","nodeInfo","purgeCache","noop","TextareaAutosize","_React$Component","props","_this","call","_onRef","_ref","inputRef","current","_onChange","event","_controlled","_resizeComponent","onChange","callback","nodeHeight","_uid","useCacheForDOMMeasurements","state","setState","undefined","_resizeLock","_proto","prototype","render","_this$props","_inputRef","_maxRows","_minRows","_onHeightChange","onHeightChange","_useCacheForDOMMeasurements","ref","componentDidMount","_this2","_resizeListener","addEventListener","componentDidUpdate","prevProps","prevState","componentWillUnmount","removeEventListener","defaultProps","process","env","NODE_ENV","propTypes"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA8CC,MAA9C,EAAsDC,IAAtD,EAA4DC,MAA5D,QAA0E,YAA1E;AAEA,IAAIC,IAAI,GAAI,CAAC,CAACC,QAAQ,CAACC,eAAT,CAAyBC,YAAvC;AACA,IAAIC,qBAAqB,GAAG;AAC1B,gBAAc,GADY;AAE1B,gBAAc,MAFY;AAG1BC,EAAAA,MAAM,EAAE,GAHkB;AAI1BC,EAAAA,UAAU,EAAE,QAJc;AAK1BC,EAAAA,QAAQ,EAAE,QALgB;AAM1BC,EAAAA,QAAQ,EAAE,UANgB;AAO1B,aAAW,OAPe;AAQ1BC,EAAAA,GAAG,EAAE,GARqB;AAS1BC,EAAAA,KAAK,EAAE;AATmB,CAA5B;AAWA,IAAIC,YAAY,GAAG,CAAC,gBAAD,EAAmB,aAAnB,EAAkC,aAAlC,EAAiD,aAAjD,EAAgE,WAAhE,EAA6E,YAA7E,EAA2F,UAA3F,EAAuG,gBAAvG,EAAyH,gBAAzH,EAA2I,OAA3I,EAAoJ,aAApJ,EAAmK,aAAnK,EAAkL,eAAlL,EAAmM,gBAAnM,EAAqN,cAArN,EAAqO,kBAArO,EAAyP,oBAAzP,EAA+Q,qBAA/Q,EAAsS,mBAAtS,EAA2T,YAA3T,CAAnB;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,cAAc,GAAIZ,QAAQ,CAACX,aAAT,CAAuB,UAAvB,CAAtB;;AAEA,IAAIwB,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvDC,EAAAA,MAAM,CAACC,IAAP,CAAYb,qBAAZ,EAAmCc,OAAnC,CAA2C,UAAUC,GAAV,EAAe;AACxDJ,IAAAA,IAAI,CAACK,KAAL,CAAWC,WAAX,CAAuBF,GAAvB,EAA4Bf,qBAAqB,CAACe,GAAD,CAAjD,EAAwD,WAAxD;AACD,GAFD;AAGD,CAJD;;AAMA;AACEN,EAAAA,cAAc,CAACS,YAAf,CAA4B,WAA5B,EAAyC,IAAzC;AACAT,EAAAA,cAAc,CAACS,YAAf,CAA4B,aAA5B,EAA2C,MAA3C;AACAR,EAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD;;AAED,SAASU,mBAAT,CAA6BC,UAA7B,EAAyCC,GAAzC,EAA8CC,QAA9C,EAAwDC,OAAxD,EAAiEC,OAAjE,EAA0E;AACxE,MAAIF,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,MAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,MAAIf,cAAc,CAACgB,UAAf,KAA8B,IAAlC,EAAwC;AACtC5B,IAAAA,QAAQ,CAAC6B,IAAT,CAAcC,WAAd,CAA0BlB,cAA1B;AACD,GAfuE,CAetE;AACF;;;AAGA,MAAImB,WAAW,GAAGC,oBAAoB,CAACT,UAAD,EAAaC,GAAb,EAAkBC,QAAlB,CAAtC;;AAEA,MAAIM,WAAW,KAAK,IAApB,EAA0B;AACxB,WAAO,IAAP;AACD;;AAED,MAAIE,WAAW,GAAGF,WAAW,CAACE,WAA9B;AAAA,MACIC,UAAU,GAAGH,WAAW,CAACG,UAD7B;AAAA,MAEIC,SAAS,GAAGJ,WAAW,CAACI,SAF5B;AAAA,MAGIC,WAAW,GAAGL,WAAW,CAACK,WAH9B,CAzBwE,CA4B7B;AAC3C;AACA;;AAEArB,EAAAA,MAAM,CAACC,IAAP,CAAYoB,WAAZ,EAAyBnB,OAAzB,CAAiC,UAAUC,GAAV,EAAe;AAC9CN,IAAAA,cAAc,CAACO,KAAf,CAAqBD,GAArB,IAA4BkB,WAAW,CAAClB,GAAD,CAAvC;AACD,GAFD;AAGAL,EAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAA,EAAAA,cAAc,CAACyB,KAAf,GAAuBd,UAAU,CAACc,KAAX,IAAoBd,UAAU,CAACe,WAA/B,IAA8C,GAArE;AACA,MAAIC,SAAS,GAAG,CAACC,QAAjB;AACA,MAAIC,SAAS,GAAGD,QAAhB;AACA,MAAIpC,MAAM,GAAGQ,cAAc,CAAC8B,YAA5B;;AAEA,MAAIP,SAAS,KAAK,YAAlB,EAAgC;AAC9B;AACA/B,IAAAA,MAAM,GAAGA,MAAM,GAAG8B,UAAlB;AACD,GAHD,MAGO,IAAIC,SAAS,KAAK,aAAlB,EAAiC;AACtC;AACA/B,IAAAA,MAAM,GAAGA,MAAM,GAAG6B,WAAlB;AACD,GA/CuE,CA+CtE;;;AAGFrB,EAAAA,cAAc,CAACyB,KAAf,GAAuB,GAAvB;AACA,MAAIM,eAAe,GAAG/B,cAAc,CAAC8B,YAAf,GAA8BT,WAApD,CAnDwE,CAmDP;AACjE;;AAEA,MAAIW,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW1C,MAAM,GAAGuC,eAApB,CAApB;;AAEA,MAAIjB,OAAO,KAAK,IAAhB,EAAsB;AACpBa,IAAAA,SAAS,GAAGI,eAAe,GAAGjB,OAA9B;;AAEA,QAAIS,SAAS,KAAK,YAAlB,EAAgC;AAC9BI,MAAAA,SAAS,GAAGA,SAAS,GAAGN,WAAZ,GAA0BC,UAAtC;AACD;;AAED9B,IAAAA,MAAM,GAAGyC,IAAI,CAACE,GAAL,CAASR,SAAT,EAAoBnC,MAApB,CAAT;AACD;;AAED,MAAIuB,OAAO,KAAK,IAAhB,EAAsB;AACpBc,IAAAA,SAAS,GAAGE,eAAe,GAAGhB,OAA9B;;AAEA,QAAIQ,SAAS,KAAK,YAAlB,EAAgC;AAC9BM,MAAAA,SAAS,GAAGA,SAAS,GAAGR,WAAZ,GAA0BC,UAAtC;AACD;;AAED9B,IAAAA,MAAM,GAAGyC,IAAI,CAACG,GAAL,CAASP,SAAT,EAAoBrC,MAApB,CAAT;AACD;;AAED,MAAI6C,QAAQ,GAAGJ,IAAI,CAACC,KAAL,CAAW1C,MAAM,GAAGuC,eAApB,CAAf;AACA,SAAO;AACLvC,IAAAA,MAAM,EAAEA,MADH;AAELmC,IAAAA,SAAS,EAAEA,SAFN;AAGLE,IAAAA,SAAS,EAAEA,SAHN;AAILQ,IAAAA,QAAQ,EAAEA,QAJL;AAKLL,IAAAA,aAAa,EAAEA;AALV,GAAP;AAOD;;AAED,SAASZ,oBAAT,CAA8BlB,IAA9B,EAAoCU,GAApC,EAAyCC,QAAzC,EAAmD;AACjD,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAIA,QAAQ,IAAId,kBAAkB,CAACa,GAAD,CAAlC,EAAyC;AACvC,WAAOb,kBAAkB,CAACa,GAAD,CAAzB;AACD;;AAED,MAAIL,KAAK,GAAG+B,MAAM,CAACC,gBAAP,CAAwBrC,IAAxB,CAAZ;;AAEA,MAAIK,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAIiB,WAAW,GAAG1B,YAAY,CAAC0C,MAAb,CAAoB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACzDD,IAAAA,GAAG,CAACC,IAAD,CAAH,GAAYnC,KAAK,CAACoC,gBAAN,CAAuBD,IAAvB,CAAZ;AACA,WAAOD,GAAP;AACD,GAHiB,EAGf,EAHe,CAAlB;AAIA,MAAIlB,SAAS,GAAGC,WAAW,CAAC,YAAD,CAA3B,CAnBiD,CAmBN;;AAE3C,MAAID,SAAS,KAAK,EAAlB,EAAsB;AACpB,WAAO,IAAP;AACD,GAvBgD,CAuB/C;AACF;;;AAGA,MAAIpC,IAAI,IAAIoC,SAAS,KAAK,YAA1B,EAAwC;AACtCC,IAAAA,WAAW,CAACoB,KAAZ,GAAoBC,UAAU,CAACrB,WAAW,CAACoB,KAAb,CAAV,GAAgCC,UAAU,CAACtC,KAAK,CAAC,oBAAD,CAAN,CAA1C,GAA0EsC,UAAU,CAACtC,KAAK,CAAC,mBAAD,CAAN,CAApF,GAAmHsC,UAAU,CAACtC,KAAK,CAAC,eAAD,CAAN,CAA7H,GAAwJsC,UAAU,CAACtC,KAAK,CAAC,cAAD,CAAN,CAAlK,GAA4L,IAAhN;AACD;;AAED,MAAIc,WAAW,GAAGwB,UAAU,CAACrB,WAAW,CAAC,gBAAD,CAAZ,CAAV,GAA4CqB,UAAU,CAACrB,WAAW,CAAC,aAAD,CAAZ,CAAxE;AACA,MAAIF,UAAU,GAAGuB,UAAU,CAACrB,WAAW,CAAC,qBAAD,CAAZ,CAAV,GAAiDqB,UAAU,CAACrB,WAAW,CAAC,kBAAD,CAAZ,CAA5E;AACA,MAAIsB,QAAQ,GAAG;AACbtB,IAAAA,WAAW,EAAEA,WADA;AAEbH,IAAAA,WAAW,EAAEA,WAFA;AAGbC,IAAAA,UAAU,EAAEA,UAHC;AAIbC,IAAAA,SAAS,EAAEA;AAJE,GAAf;;AAOA,MAAIV,QAAJ,EAAc;AACZd,IAAAA,kBAAkB,CAACa,GAAD,CAAlB,GAA0BkC,QAA1B;AACD;;AAED,SAAOA,QAAP;AACD;;AAED,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBnC,GAApB,EAAyB;AACxC,SAAOb,kBAAkB,CAACa,GAAD,CAAzB;AACD,CAFD;;AAIA,IAAIoC,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;AAEA,IAAIpC,GAAG,GAAG,CAAV;;AAEA,IAAIqC,gBAAgB,GACpB,aACA,UAAUC,gBAAV,EAA4B;AAC1B1E,EAAAA,cAAc,CAACyE,gBAAD,EAAmBC,gBAAnB,CAAd;;AAEA,WAASD,gBAAT,CAA0BE,KAA1B,EAAiC;AAC/B,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,IAAtB,EAA4BF,KAA5B,KAAsC,IAA9C;;AAEAC,IAAAA,KAAK,CAACE,MAAN,GAAe,UAAUpD,IAAV,EAAgB;AAC7BkD,MAAAA,KAAK,CAACG,IAAN,GAAarD,IAAb;AACA,UAAIsD,QAAQ,GAAGJ,KAAK,CAACD,KAAN,CAAYK,QAA3B;;AAEA,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,QAAAA,QAAQ,CAACtD,IAAD,CAAR;AACA;AACD;;AAEDsD,MAAAA,QAAQ,CAACC,OAAT,GAAmBvD,IAAnB;AACD,KAVD;;AAYAkD,IAAAA,KAAK,CAACM,SAAN,GAAkB,UAAUC,KAAV,EAAiB;AACjC,UAAI,CAACP,KAAK,CAACQ,WAAX,EAAwB;AACtBR,QAAAA,KAAK,CAACS,gBAAN;AACD;;AAEDT,MAAAA,KAAK,CAACD,KAAN,CAAYW,QAAZ,CAAqBH,KAArB,EAA4BpF,sBAAsB,CAAC6E,KAAD,CAAlD;AACD,KAND;;AAQAA,IAAAA,KAAK,CAACS,gBAAN,GAAyB,UAAUE,QAAV,EAAoB;AAC3C,UAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,QAAAA,QAAQ,GAAGf,IAAX;AACD;;AAED,UAAIgB,UAAU,GAAGtD,mBAAmB,CAAC0C,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACa,IAAnB,EAAyBb,KAAK,CAACD,KAAN,CAAYe,0BAArC,EAAiEd,KAAK,CAACD,KAAN,CAAYrC,OAA7E,EAAsFsC,KAAK,CAACD,KAAN,CAAYpC,OAAlG,CAApC;;AAEA,UAAIiD,UAAU,KAAK,IAAnB,EAAyB;AACvBD,QAAAA,QAAQ;AACR;AACD;;AAED,UAAIvE,MAAM,GAAGwE,UAAU,CAACxE,MAAxB;AAAA,UACImC,SAAS,GAAGqC,UAAU,CAACrC,SAD3B;AAAA,UAEIE,SAAS,GAAGmC,UAAU,CAACnC,SAF3B;AAAA,UAGIQ,QAAQ,GAAG2B,UAAU,CAAC3B,QAH1B;AAAA,UAIIL,aAAa,GAAGgC,UAAU,CAAChC,aAJ/B;AAKAoB,MAAAA,KAAK,CAACf,QAAN,GAAiBA,QAAjB;AACAe,MAAAA,KAAK,CAACpB,aAAN,GAAsBA,aAAtB;;AAEA,UAAIoB,KAAK,CAACe,KAAN,CAAY3E,MAAZ,KAAuBA,MAAvB,IAAiC4D,KAAK,CAACe,KAAN,CAAYxC,SAAZ,KAA0BA,SAA3D,IAAwEyB,KAAK,CAACe,KAAN,CAAYtC,SAAZ,KAA0BA,SAAtG,EAAiH;AAC/GuB,QAAAA,KAAK,CAACgB,QAAN,CAAe;AACb5E,UAAAA,MAAM,EAAEA,MADK;AAEbmC,UAAAA,SAAS,EAAEA,SAFE;AAGbE,UAAAA,SAAS,EAAEA;AAHE,SAAf,EAIGkC,QAJH;;AAMA;AACD;;AAEDA,MAAAA,QAAQ;AACT,KA/BD;;AAiCAX,IAAAA,KAAK,CAACe,KAAN,GAAc;AACZ3E,MAAAA,MAAM,EAAE2D,KAAK,CAAC5C,KAAN,IAAe4C,KAAK,CAAC5C,KAAN,CAAYf,MAA3B,IAAqC,CADjC;AAEZmC,MAAAA,SAAS,EAAE,CAACC,QAFA;AAGZC,MAAAA,SAAS,EAAED;AAHC,KAAd;AAKAwB,IAAAA,KAAK,CAACa,IAAN,GAAarD,GAAG,EAAhB;AACAwC,IAAAA,KAAK,CAACQ,WAAN,GAAoBT,KAAK,CAAC1B,KAAN,KAAgB4C,SAApC;AACAjB,IAAAA,KAAK,CAACkB,WAAN,GAAoB,KAApB;AACA,WAAOlB,KAAP;AACD;;AAED,MAAImB,MAAM,GAAGtB,gBAAgB,CAACuB,SAA9B;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,WAAW,GAAG,KAAKvB,KAAvB;AAAA,QACIwB,SAAS,GAAGD,WAAW,CAAClB,QAD5B;AAAA,QAEIoB,QAAQ,GAAGF,WAAW,CAAC3D,OAF3B;AAAA,QAGI8D,QAAQ,GAAGH,WAAW,CAAC5D,OAH3B;AAAA,QAIIgE,eAAe,GAAGJ,WAAW,CAACK,cAJlC;AAAA,QAKIC,2BAA2B,GAAGN,WAAW,CAACR,0BAL9C;AAAA,QAMIf,KAAK,GAAG7E,6BAA6B,CAACoG,WAAD,EAAc,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EAAmC,gBAAnC,EAAqD,4BAArD,CAAd,CANzC;;AAQAvB,IAAAA,KAAK,CAAC5C,KAAN,GAAclC,QAAQ,CAAC,EAAD,EAAK8E,KAAK,CAAC5C,KAAX,EAAkB;AACtCf,MAAAA,MAAM,EAAE,KAAK2E,KAAL,CAAW3E;AADmB,KAAlB,CAAtB;AAGA,QAAIqC,SAAS,GAAGI,IAAI,CAACE,GAAL,CAASgB,KAAK,CAAC5C,KAAN,CAAYsB,SAAZ,IAAyBD,QAAlC,EAA4C,KAAKuC,KAAL,CAAWtC,SAAvD,CAAhB;;AAEA,QAAIA,SAAS,GAAG,KAAKsC,KAAL,CAAW3E,MAA3B,EAAmC;AACjC2D,MAAAA,KAAK,CAAC5C,KAAN,CAAYb,QAAZ,GAAuB,QAAvB;AACD;;AAED,WAAOjB,aAAa,CAAC,UAAD,EAAaJ,QAAQ,CAAC,EAAD,EAAK8E,KAAL,EAAY;AACnDW,MAAAA,QAAQ,EAAE,KAAKJ,SADoC;AAEnDuB,MAAAA,GAAG,EAAE,KAAK3B;AAFyC,KAAZ,CAArB,CAApB;AAID,GAtBD;;AAwBAiB,EAAAA,MAAM,CAACW,iBAAP,GAA2B,SAASA,iBAAT,GAA6B;AACtD,QAAIC,MAAM,GAAG,IAAb;;AAEA,SAAKtB,gBAAL,GAHsD,CAG7B;AACzB;AACA;;;AAGA,SAAKuB,eAAL,GAAuB,YAAY;AACjC,UAAID,MAAM,CAACb,WAAX,EAAwB;AACtB;AACD;;AAEDa,MAAAA,MAAM,CAACb,WAAP,GAAqB,IAArB;;AAEAa,MAAAA,MAAM,CAACtB,gBAAP,CAAwB,YAAY;AAClCsB,QAAAA,MAAM,CAACb,WAAP,GAAqB,KAArB;AACD,OAFD;AAGD,KAVD;;AAYAhC,IAAAA,MAAM,CAAC+C,gBAAP,CAAwB,QAAxB,EAAkC,KAAKD,eAAvC;AACD,GArBD;;AAuBAb,EAAAA,MAAM,CAACe,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AAC5E,QAAID,SAAS,KAAK,KAAKpC,KAAvB,EAA8B;AAC5B,WAAKU,gBAAL;AACD;;AAED,QAAI,KAAKM,KAAL,CAAW3E,MAAX,KAAsBgG,SAAS,CAAChG,MAApC,EAA4C;AAC1C,WAAK2D,KAAL,CAAW4B,cAAX,CAA0B,KAAKZ,KAAL,CAAW3E,MAArC,EAA6C,IAA7C;AACD;AACF,GARD;;AAUA+E,EAAAA,MAAM,CAACkB,oBAAP,GAA8B,SAASA,oBAAT,GAAgC;AAC5DnD,IAAAA,MAAM,CAACoD,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,eAA1C;AACArC,IAAAA,UAAU,CAAC,KAAKkB,IAAN,CAAV;AACD,GAHD;;AAKA,SAAOhB,gBAAP;AACD,CAzID,CAyIEvE,SAzIF,CAFA;;AA6IAuE,gBAAgB,CAAC0C,YAAjB,GAAgC;AAC9BnC,EAAAA,QAAQ,EAAER,IADoB;AAE9Bc,EAAAA,QAAQ,EAAEd,IAFoB;AAG9B+B,EAAAA,cAAc,EAAE/B,IAHc;AAI9BkB,EAAAA,0BAA0B,EAAE;AAJE,CAAhC;AAMA0B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC7C,gBAAgB,CAAC8C,SAAjB,GAA6B;AACnEvC,EAAAA,QAAQ,EAAE7E,SAAS,CAAC,CAACC,IAAD,EAAOC,KAAK,CAAC;AAC/B4E,IAAAA,OAAO,EAAE3E;AADsB,GAAD,CAAZ,CAAD,CADgD;AAInEiC,EAAAA,OAAO,EAAEhC,MAJ0D;AAKnE+B,EAAAA,OAAO,EAAE/B,MAL0D;AAMnE+E,EAAAA,QAAQ,EAAElF,IANyD;AAOnEmG,EAAAA,cAAc,EAAEnG,IAPmD;AAQnE2B,EAAAA,KAAK,EAAEvB,MAR4D;AASnEkF,EAAAA,0BAA0B,EAAEjF,IATuC;AAUnEwC,EAAAA,KAAK,EAAEvC;AAV4D,CAArE,GAWI,KAAK,CAXT;AAaA,eAAe+D,gBAAf","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport { oneOfType, func, shape, any, number, object, bool, string } from 'prop-types';\n\nvar isIE =  !!document.documentElement.currentStyle ;\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea =  document.createElement('textarea');\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n{\n  hiddenTextarea.setAttribute('tab-index', '-1');\n  hiddenTextarea.setAttribute('aria-hidden', 'true');\n  forceHiddenStyles(hiddenTextarea);\n}\n\nfunction calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (minRows === void 0) {\n    minRows = null;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = null;\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);\n\n  if (nodeStyling === null) {\n    return null;\n  }\n\n  var paddingSize = nodeStyling.paddingSize,\n      borderSize = nodeStyling.borderSize,\n      boxSizing = nodeStyling.boxSizing,\n      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n  Object.keys(sizingStyle).forEach(function (key) {\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  } // measure height of a textarea with a single row\n\n\n  hiddenTextarea.value = 'x';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize; // Stores the value's rows count rendered in `hiddenTextarea`,\n  // regardless if `maxRows` or `minRows` props are passed\n\n  var valueRowCount = Math.floor(height / singleRowHeight);\n\n  if (minRows !== null) {\n    minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  var rowCount = Math.floor(height / singleRowHeight);\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    rowCount: rowCount,\n    valueRowCount: valueRowCount\n  };\n}\n\nfunction calculateNodeStyling(node, uid, useCache) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (useCache && computedStyleCache[uid]) {\n    return computedStyleCache[uid];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {\n    obj[name] = style.getPropertyValue(name);\n    return obj;\n  }, {});\n  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);\n  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache) {\n    computedStyleCache[uid] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nvar purgeCache = function purgeCache(uid) {\n  delete computedStyleCache[uid];\n};\n\nvar noop = function noop() {};\n\nvar uid = 0;\n\nvar TextareaAutosize =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TextareaAutosize, _React$Component);\n\n  function TextareaAutosize(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this._onRef = function (node) {\n      _this._ref = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n        return;\n      }\n\n      inputRef.current = node;\n    };\n\n    _this._onChange = function (event) {\n      if (!_this._controlled) {\n        _this._resizeComponent();\n      }\n\n      _this.props.onChange(event, _assertThisInitialized(_this));\n    };\n\n    _this._resizeComponent = function (callback) {\n      if (callback === void 0) {\n        callback = noop;\n      }\n\n      var nodeHeight = calculateNodeHeight(_this._ref, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);\n\n      if (nodeHeight === null) {\n        callback();\n        return;\n      }\n\n      var height = nodeHeight.height,\n          minHeight = nodeHeight.minHeight,\n          maxHeight = nodeHeight.maxHeight,\n          rowCount = nodeHeight.rowCount,\n          valueRowCount = nodeHeight.valueRowCount;\n      _this.rowCount = rowCount;\n      _this.valueRowCount = valueRowCount;\n\n      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {\n        _this.setState({\n          height: height,\n          minHeight: minHeight,\n          maxHeight: maxHeight\n        }, callback);\n\n        return;\n      }\n\n      callback();\n    };\n\n    _this.state = {\n      height: props.style && props.style.height || 0,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    };\n    _this._uid = uid++;\n    _this._controlled = props.value !== undefined;\n    _this._resizeLock = false;\n    return _this;\n  }\n\n  var _proto = TextareaAutosize.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _inputRef = _this$props.inputRef,\n        _maxRows = _this$props.maxRows,\n        _minRows = _this$props.minRows,\n        _onHeightChange = _this$props.onHeightChange,\n        _useCacheForDOMMeasurements = _this$props.useCacheForDOMMeasurements,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inputRef\", \"maxRows\", \"minRows\", \"onHeightChange\", \"useCacheForDOMMeasurements\"]);\n\n    props.style = _extends({}, props.style, {\n      height: this.state.height\n    });\n    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);\n\n    if (maxHeight < this.state.height) {\n      props.style.overflow = 'hidden';\n    }\n\n    return createElement(\"textarea\", _extends({}, props, {\n      onChange: this._onChange,\n      ref: this._onRef\n    }));\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment\n    // causing competing rerenders (due to setState in the listener) in React.\n    // More can be found here - facebook/react#6324\n\n\n    this._resizeListener = function () {\n      if (_this2._resizeLock) {\n        return;\n      }\n\n      _this2._resizeLock = true;\n\n      _this2._resizeComponent(function () {\n        _this2._resizeLock = false;\n      });\n    };\n\n    window.addEventListener('resize', this._resizeListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._resizeComponent();\n    }\n\n    if (this.state.height !== prevState.height) {\n      this.props.onHeightChange(this.state.height, this);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener);\n    purgeCache(this._uid);\n  };\n\n  return TextareaAutosize;\n}(Component);\n\nTextareaAutosize.defaultProps = {\n  inputRef: noop,\n  onChange: noop,\n  onHeightChange: noop,\n  useCacheForDOMMeasurements: false\n};\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  inputRef: oneOfType([func, shape({\n    current: any\n  })]),\n  maxRows: number,\n  minRows: number,\n  onChange: func,\n  onHeightChange: func,\n  style: object,\n  useCacheForDOMMeasurements: bool,\n  value: string\n} : void 0;\n\nexport default TextareaAutosize;\n"]},"metadata":{},"sourceType":"module"}