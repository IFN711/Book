{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\IFN711\\\\LFAA\\\\src\\\\component\\\\Book\\\\Booklist.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport title1 from './How The Rooster Found His Sound/552 English/552 How The Rooster Found His Sound_reflow/OEBPS/Images/cover.jpg';\nimport title2 from './20 Busy Little Ants/146English/146 20 Busy Little Ants_reflow/OEBPS/Images/cover.jpg';\nimport title3 from './Tahlia the Tortoise/527 English/527 Tahlia The Tortoise Finds An Umbrella_reflow/OEBPS/Images/cover.jpg';\nimport Typography from '@material-ui/core/Typography';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Button } from \"@material-ui/core\";\nimport Icon from '@material-ui/core/Icon';\nimport { Input } from '@material-ui/core';\nconst info = [{\n  img: title1,\n  title: 'How The Rooster Found His Sound',\n  author: 'abc'\n}, {\n  img: title2,\n  title: '20 Busy Little Ants',\n  author: 'abc'\n}, {\n  img: title3,\n  title: 'Tahlia the Tortoise',\n  author: 'abc'\n}];\n\nfunction Searchbar(props) {\n  const [search, setSearch] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '50%',\n      backgroundColor: 'white',\n      borderRadius: '13px'\n    },\n    placeholder: \"Search some book here...\",\n    value: search,\n    onChange: e => {\n      setSearch(e.target.value);\n    },\n    onKeyPress: e => {\n      if (e.key === \"Enter\") {\n        if (props.onSubmit) {\n          props.onSubmit(search);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    width: \"15%\",\n    float: \"right\",\n    onClick: e => {\n      if (props.onSubmit) {\n        props.onSubmit(search);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, \"Search\")));\n}\n\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n  const [search, setSearch] = useState();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: topcontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    align: \"center\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Libarary For All\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    style: subheadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Seachbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Searchbar, {\n    onSubmit: newSearch => setSearch(newSearch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 300,\n    className: classes.gridList,\n    cols: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, info.map(info => /*#__PURE__*/React.createElement(GridListTile, {\n    key: info.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: info.img,\n    alt: info.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: info.title,\n    subtitle: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }\n    }, \"by: \", info.author),\n    actionIcon: /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      size: \"small\",\n      className: classes.button,\n      endIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 30\n        }\n      }, \"send\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Start\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))))));\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    clear: 'both',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justify: 'flex-start',\n    overflow: 'hidden'\n  },\n  search: {\n    border: '10px',\n    borderColor: 'blue'\n  },\n  gridList: {\n    width: '100%',\n    height: 750\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nconst topcontainer = {\n  backgroundColor: '#273746',\n  paddingTop: '100px',\n  paddingBottom: '50px',\n  paddingLeft: '300px',\n  paddingRight: '300px'\n};\nconst subheadding = {\n  color: 'white',\n  marginTop: '50px',\n  marginLeft: '200px',\n  marginRight: '200px'\n};","map":{"version":3,"sources":["D:/react/IFN711/LFAA/src/component/Book/Booklist.js"],"names":["React","useState","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","title1","title2","title3","Typography","SearchIcon","InputBase","Button","Icon","Input","info","img","title","author","Searchbar","props","search","setSearch","width","backgroundColor","borderRadius","e","target","value","key","onSubmit","position","TitlebarGridList","classes","useStyles","topcontainer","color","subheadding","newSearch","root","gridList","map","button","theme","clear","display","flexWrap","justify","overflow","border","borderColor","height","icon","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport title1 from './How The Rooster Found His Sound/552 English/552 How The Rooster Found His Sound_reflow/OEBPS/Images/cover.jpg';\r\nimport title2 from './20 Busy Little Ants/146English/146 20 Busy Little Ants_reflow/OEBPS/Images/cover.jpg';\r\nimport title3 from './Tahlia the Tortoise/527 English/527 Tahlia The Tortoise Finds An Umbrella_reflow/OEBPS/Images/cover.jpg'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Input } from '@material-ui/core';\r\n\r\n \r\n\r\nconst info = [\r\n {\r\n      img: title1,\r\n      title: 'How The Rooster Found His Sound',\r\n     author: 'abc',\r\n   },\r\n   {\r\n       img:title2,\r\n       title:'20 Busy Little Ants',\r\n       author:'abc',\r\n   },\r\n   {\r\n    img:title3,\r\n    title:'Tahlia the Tortoise',\r\n    author:'abc',\r\n}\r\n  ];\r\n\r\n  function Searchbar(props){\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div>\r\n        <Input  \r\n          \r\n          style={{width:'50%',backgroundColor:'white',borderRadius:'13px'}}\r\n          placeholder=\"Search some book here...\"\r\n          value={search}\r\n          onChange={e => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          onKeyPress={e => {\r\n            if (e.key === \"Enter\") {\r\n              if (props.onSubmit) {\r\n                props.onSubmit(search);\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        <span style={{position:\"relative\"}}><Button variant=\"contained\" width='15%' float='right'\r\n          onClick={e => {\r\n            if (props.onSubmit) {\r\n              props.onSubmit(search);\r\n            }\r\n          }}\r\n        >\r\n          \r\n          Search\r\n        </Button>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default function TitlebarGridList() {\r\n  const classes = useStyles();\r\n  const [search,setSearch]=useState()\r\n\r\n  return (\r\n    <div>\r\n        <div style={topcontainer}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" style={{color:'white'}} >\r\n              Libarary For All\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" style={subheadding} >\r\n                introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion introducion \r\n            </Typography>\r\n        </div>\r\n        <div className='Seachbar'>\r\n          <Searchbar onSubmit={newSearch => setSearch(newSearch)} />\r\n        </div>\r\n        \r\n\r\n        <div className={classes.root}>\r\n        <GridList cellHeight={300} className={classes.gridList} cols={7}>\r\n\r\n            {info.map((info) => (\r\n            <GridListTile key={info.img}>\r\n                <img src={info.img} alt={info.title} />\r\n                <GridListTileBar\r\n                title={info.title}\r\n                subtitle={<span>by: {info.author}</span>}\r\n                actionIcon={\r\n                    <Button       \r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    endIcon={<Icon>send</Icon>}>\r\n                        Start\r\n                    </Button>\r\n                }\r\n                />\r\n            </GridListTile>\r\n            ))}\r\n        </GridList>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      clear:'both',\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justify: 'flex-start',\r\n      overflow: 'hidden',\r\n    },\r\n    search: {\r\n      border:'10px',\r\n      borderColor:'blue'\r\n      },\r\n\r\n\r\n    gridList: {\r\n      width: '100%',\r\n      height: 750,\r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n  }));\r\n  \r\nconst topcontainer={\r\n    backgroundColor:'#273746',\r\n    paddingTop:'100px',\r\n    paddingBottom:'50px',\r\n    paddingLeft:'300px',\r\n    paddingRight:'300px',\r\n    \r\n}\r\n\r\nconst subheadding={\r\n    color:'white',\r\n    marginTop:'50px',\r\n    marginLeft:'200px',\r\n    marginRight:'200px'\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}