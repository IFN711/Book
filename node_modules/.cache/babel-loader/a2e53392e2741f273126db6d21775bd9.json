{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getFormattedTimestamp = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Photo = _interopRequireDefault(require(\"../Photo\"));\n\nvar _PropTypes = _interopRequireDefault(require(\"./PropTypes\"));\n\nvar _Wrapper = _interopRequireDefault(require(\"./Wrapper\"));\n\nvar _Date = _interopRequireDefault(require(\"./Date\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getFormattedTimestamp = function getFormattedTimestamp(time) {\n  var diff = (Date.now() - time) / 1000 / 60; // Minutes\n\n  if (diff < 60) {\n    return \"\".concat(Math.round(diff), \"m\");\n  }\n\n  if (diff >= 60 && diff < 24 * 60) {\n    return \"\".concat(Math.round(diff / 60), \"h\");\n  }\n\n  return \"\".concat(Math.round(diff / (24 * 60)), \"d\");\n};\n\nexports.getFormattedTimestamp = getFormattedTimestamp;\n\nvar Comment = function Comment(_ref) {\n  var photo = _ref.photo,\n      userName = _ref.userName,\n      content = _ref.content,\n      createdAt = _ref.createdAt;\n  return _react.default.createElement(_Wrapper.default, null, _react.default.createElement(\"div\", null, _react.default.createElement(_Photo.default, {\n    src: photo,\n    alt: userName,\n    size: \"small\"\n  })), _react.default.createElement(\"div\", null, _react.default.createElement(\"strong\", null, userName), _react.default.createElement(\"br\", null), content), _react.default.createElement(_Date.default, null, getFormattedTimestamp(createdAt)));\n};\n\nComment.propTypes = _PropTypes.default;\nvar _default = Comment;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Comment/index.jsx"],"names":["getFormattedTimestamp","diff","Date","Math","Comment","photo","userName","content","createdAt","CommentPropTypes"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;;;;;;;AAEO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAAU;AAC7C,MAAMC,IAAI,GAAG,CAACC,IAAI,CAAJA,GAAAA,KAAD,IAAA,IAAA,IAAA,GADgC,EAC7C,CAD6C,CACC;;AAE9C,MAAID,IAAI,GAAR,EAAA,EAAe;AACb,WAAA,GAAA,MAAA,CAAUE,IAAI,CAAJA,KAAAA,CAAV,IAAUA,CAAV,EAAA,GAAA,CAAA;AACD;;AAED,MAAIF,IAAI,IAAJA,EAAAA,IAAcA,IAAI,GAAG,KAAzB,EAAA,EAAkC;AAChC,WAAA,GAAA,MAAA,CAAUE,IAAI,CAAJA,KAAAA,CAAWF,IAAI,GAAzB,EAAUE,CAAV,EAAA,GAAA,CAAA;AACD;;AAED,SAAA,GAAA,MAAA,CAAUA,IAAI,CAAJA,KAAAA,CAAWF,IAAI,IAAI,KAA7B,EAAyB,CAAfE,CAAV,EAAA,GAAA,CAAA;AAXK,CAAA;;;;AAcP,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAA;AAAA,MACdC,KADc,GAAA,IAAA,CAAA,KAAA;AAAA,MACPC,QADO,GAAA,IAAA,CAAA,QAAA;AAAA,MACGC,OADH,GAAA,IAAA,CAAA,OAAA;AAAA,MACYC,SADZ,GAAA,IAAA,CAAA,SAAA;AAAA,SAGd,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA,IAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,OAAA,EAAA;AAAO,IAAA,GAAG,EAAV,KAAA;AAAmB,IAAA,GAAG,EAAtB,QAAA;AAAkC,IAAA,IAAI,EAAC;AAAvC,GAAA,CADF,CADF,EAIE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EADF,QACE,CADF,EAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAFF,IAEE,CAFF,EAJF,OAIE,CAJF,EASE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,IAAA,EAAWR,qBAAqB,CAZpB,SAYoB,CAAhC,CATF,CAHc;AAAhB,CAAA;;AAgBAI,OAAO,CAAPA,SAAAA,GAAoBK,UAAAA,CAApBL,OAAAA;eAEeA,O","sourcesContent":["import React from 'react';\n\nimport Photo from '../Photo';\n\nimport CommentPropTypes from './PropTypes';\nimport Wrapper from './Wrapper';\nimport DateView from './Date';\n\nexport const getFormattedTimestamp = (time) => {\n  const diff = (Date.now() - time) / 1000 / 60; // Minutes\n\n  if (diff < 60) {\n    return `${Math.round(diff)}m`;\n  }\n\n  if (diff >= 60 && diff < 24 * 60) {\n    return `${Math.round(diff / 60)}h`;\n  }\n\n  return `${Math.round(diff / (24 * 60))}d`;\n};\n\nconst Comment = ({\n  photo, userName, content, createdAt,\n}) => (\n  <Wrapper>\n    <div>\n      <Photo src={photo} alt={userName} size=\"small\" />\n    </div>\n    <div>\n      <strong>{userName}</strong>\n      <br />\n      {content}\n    </div>\n    <DateView>{getFormattedTimestamp(createdAt)}</DateView>\n  </Wrapper>\n);\n\nComment.propTypes = CommentPropTypes;\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"script"}