{"version":3,"sources":["../../../src/UserProfile/tests/index.test.jsx"],"names":["describe","userProps","photo","userName","location","it","expect","find","Header","toHaveLength","Overview","Comments","NewComment","wrapper","dive","LikeButton","simulate","state","toEqual","Button","form","instance","input","current","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shallow, mount } from 'enzyme';\n\nimport UserProfile from '../index';\nimport Header from '../../Header';\nimport Overview from '../../Overview';\nimport LikeButton from '../../LikeButton';\nimport Button from '../../Button';\nimport Comments from '../../Comments';\nimport NewComment from '../../NewComment';\n\ndescribe('<UserProfile />', () => {\n  const userProps = { photo: '', userName: '', location: '' };\n\n  it('should render header', () => {\n    expect(shallow(<UserProfile {...userProps} />).find(Header)).toHaveLength(1);\n  });\n\n  it('should render overview', () => {\n    expect(shallow(<UserProfile {...userProps} />).find(Overview)).toHaveLength(1);\n  });\n\n  it('should render comments', () => {\n    expect(shallow(<UserProfile {...userProps} />).find(Comments)).toHaveLength(1);\n  });\n\n  it('should render new comment', () => {\n    expect(shallow(<UserProfile {...userProps} />).find(NewComment)).toHaveLength(1);\n  });\n\n  it('should increase like count on heart click', () => {\n    const wrapper = shallow(<UserProfile {...userProps} />);\n    wrapper\n      .find(Overview)\n      .dive()\n      .find(LikeButton)\n      .simulate('click');\n\n    expect(wrapper.state('likesCount')).toEqual(1);\n  });\n\n  it('should increase followers count on button click', () => {\n    const wrapper = shallow(<UserProfile {...userProps} />);\n\n    wrapper\n      .find(Overview)\n      .dive()\n      .find(Button)\n      .simulate('click');\n\n    expect(wrapper.state('followersCount')).toEqual(1);\n  });\n\n  it('should not add empty comment on form submit', () => {\n    const wrapper = mount(<UserProfile {...userProps} />);\n    const form = wrapper.find(NewComment);\n\n    form.instance().input.current.value = '';\n    form.simulate('submit');\n\n    expect(wrapper.state('comments')).toHaveLength(0);\n  });\n\n  it('should add comment on form submit', () => {\n    const wrapper = mount(<UserProfile {...userProps} />);\n    const form = wrapper.find(NewComment);\n\n    form.instance().input.current.value = 'Hello';\n    form.simulate('submit');\n\n    expect(wrapper.state('comments')).toHaveLength(1);\n  });\n});\n"],"file":"index.test.js"}