{"version":3,"sources":["../../../src/Comments/tests/index.test.jsx"],"names":["describe","it","wrapper","expect","state","toBe","find","Button","simulate","Comment","toHaveLength","comments","map","id","photo","userName","content","createdAt","length"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BC,EAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAM;AACjD,QAAMC,OAAO,GAAG,qBAAQ,6BAAC,cAAD;AAAU,MAAA,QAAQ,EAAE;AAApB,MAAR,CAAhB;AAEAC,IAAAA,MAAM,CAACD,OAAO,CAACE,KAAR,CAAc,SAAd,CAAD,CAAN,CAAiCC,IAAjC,CAAsC,IAAtC;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAaC,oBAAb,EAAqBC,QAArB,CAA8B,OAA9B;AAEAL,IAAAA,MAAM,CAACD,OAAO,CAACE,KAAR,CAAc,SAAd,CAAD,CAAN,CAAiCC,IAAjC,CAAsC,KAAtC;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAaC,oBAAb,EAAqBC,QAArB,CAA8B,OAA9B;AAEAL,IAAAA,MAAM,CAACD,OAAO,CAACE,KAAR,CAAc,SAAd,CAAD,CAAN,CAAiCC,IAAjC,CAAsC,IAAtC;AACD,GAVC,CAAF;AAYAJ,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACzD,QAAMC,OAAO,GAAG,qBAAQ,6BAAC,cAAD;AAAU,MAAA,QAAQ,EAAE;AAApB,MAAR,CAAhB;AAEAC,IAAAA,MAAM,CAACD,OAAO,CAACI,IAAR,CAAaG,gBAAb,CAAD,CAAN,CAA8BC,YAA9B,CAA2C,CAA3C;AACD,GAJC,CAAF;AAMAT,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMU,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBC,GAArB,CAAyB,UAAAC,EAAE;AAAA,aAAK;AAC/CA,QAAAA,EAAE,EAAFA,EAD+C;AAE/CC,QAAAA,KAAK,EAAE,EAFwC;AAG/CC,QAAAA,QAAQ,EAAE,EAHqC;AAI/CC,QAAAA,OAAO,EAAE,EAJsC;AAK/CC,QAAAA,SAAS,EAAE;AALoC,OAAL;AAAA,KAA3B,CAAjB;AAQA,QAAMf,OAAO,GAAG,qBAAQ,6BAAC,cAAD;AAAU,MAAA,QAAQ,EAAES;AAApB,MAAR,CAAhB;AAEAR,IAAAA,MAAM,CAACD,OAAO,CAACI,IAAR,CAAaG,gBAAb,CAAD,CAAN,CAA8BC,YAA9B,CAA2CC,QAAQ,CAACO,MAApD;AACD,GAZC,CAAF;AAaD,CAhCO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport Comments from '../index';\nimport { Button } from '../HideComments';\nimport Comment from '../../Comment';\n\ndescribe('<Comments />', () => {\n  it('should hide and show comments on click', () => {\n    const wrapper = shallow(<Comments comments={[]} />);\n\n    expect(wrapper.state('visible')).toBe(true);\n    wrapper.find(Button).simulate('click');\n\n    expect(wrapper.state('visible')).toBe(false);\n    wrapper.find(Button).simulate('click');\n\n    expect(wrapper.state('visible')).toBe(true);\n  });\n\n  it('should not render any comment without comments', () => {\n    const wrapper = shallow(<Comments comments={[]} />);\n\n    expect(wrapper.find(Comment)).toHaveLength(0);\n  });\n\n  it('should render all specified comments', () => {\n    const comments = ['a', 'b', 'c', 'd'].map(id => ({\n      id,\n      photo: '',\n      userName: '',\n      content: '',\n      createdAt: 0,\n    }));\n\n    const wrapper = shallow(<Comments comments={comments} />);\n\n    expect(wrapper.find(Comment)).toHaveLength(comments.length);\n  });\n});\n"],"file":"index.test.js"}